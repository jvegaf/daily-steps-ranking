{
    "sourceFile": "src/store/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1644117997717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1644118030191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n       commit('setUsers', users);\n     },\n \n     async fetchUser({ commit, state }, userId) {\n+      const isLoading = state.isLoading;\n       const users = [...state.users];\n       const user = users.find(u => {\n         return u.id === userId;\n       });\n"
                },
                {
                    "date": 1644118044332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,8 @@\n       commit('setUsers', users);\n     },\n \n     async fetchUser({ commit, state }, userId) {\n-      const isLoading = state.isLoading;\n       const users = [...state.users];\n       const user = users.find(u => {\n         return u.id === userId;\n       });\n"
                },
                {
                    "date": 1644118068797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n       commit('setUsers', users);\n     },\n \n     async fetchUser({ commit, state }, userId) {\n+      commit\n       const users = [...state.users];\n       const user = users.find(u => {\n         return u.id === userId;\n       });\n"
                },
                {
                    "date": 1644118086073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       commit('setUsers', users);\n     },\n \n     async fetchUser({ commit, state }, userId) {\n-      commit\n+      commit()\n       const users = [...state.users];\n       const user = users.find(u => {\n         return u.id === userId;\n       });\n"
                },
                {
                    "date": 1644118092518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       commit('setUsers', users);\n     },\n \n     async fetchUser({ commit, state }, userId) {\n-      commit()\n+      commit('isloading', true);\n       const users = [...state.users];\n       const user = users.find(u => {\n         return u.id === userId;\n       });\n"
                },
                {
                    "date": 1644118101408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       commit('setUsers', users);\n     },\n \n     async fetchUser({ commit, state }, userId) {\n-      commit('isloading', true);\n+      commit('isLoading', true);\n       const users = [...state.users];\n       const user = users.find(u => {\n         return u.id === userId;\n       });\n"
                },
                {
                    "date": 1644118124083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,9 @@\n         return u;\n       });\n \n       commit('setUsers', usersUpdated);\n+      commit('isLoading', false);\n     },\n \n     async setTitle({ commit }, title) {\n       commit('setHeaderTitle', title);\n"
                },
                {
                    "date": 1644118248193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n     },\n     setHeaderTitle: (state, title) => {\n       state.headerTitle = title;\n     },\n+    setIsLoading: (state, isLoading) => {\n   },\n   actions: {\n     async fetchUsers({ commit }) {\n       const dailyResponse = await apiProvider.getDailyRanking();\n"
                },
                {
                    "date": 1644118257047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,10 @@\n     setHeaderTitle: (state, title) => {\n       state.headerTitle = title;\n     },\n     setIsLoading: (state, isLoading) => {\n+      state.isLoading = isLoading;\n+    },\n   },\n   actions: {\n     async fetchUsers({ commit }) {\n       const dailyResponse = await apiProvider.getDailyRanking();\n"
                },
                {
                    "date": 1644118276430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n       commit('setUsers', users);\n     },\n \n     async fetchUser({ commit, state }, userId) {\n-      commit('isLoading', true);\n+      commit('setIsLoading', true);\n       const users = [...state.users];\n       const user = users.find(u => {\n         return u.id === userId;\n       });\n"
                },
                {
                    "date": 1644118291740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n         return u;\n       });\n \n       commit('setUsers', usersUpdated);\n-      commit('isLoading', false);\n+      commit('setIsLoading', false);\n     },\n \n     async setTitle({ commit }, title) {\n       commit('setHeaderTitle', title);\n"
                },
                {
                    "date": 1644166327983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,6 +94,7 @@\n     getAllUsers: state => state.users,\n     getUser: state => id => {\n       return state.users.find(u => u.id === id);\n     },\n+    \n   },\n });\n"
                },
                {
                    "date": 1644166337542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,7 +94,7 @@\n     getAllUsers: state => state.users,\n     getUser: state => id => {\n       return state.users.find(u => u.id === id);\n     },\n-    \n+    getIsLoading: state => state.isLoading,\n   },\n });\n"
                }
            ],
            "date": 1644117997717,
            "name": "Commit-0",
            "content": "import { createStore } from 'vuex';\nimport { apiProvider } from '../api/api-provider';\nimport { UtilDate } from '../util/utilDate';\n\nconst workoutsDate = (dates, workouts) => {\n  return dates.map(day => {\n    const workout = {};\n    workout.date = day;\n    workout.steps = 0;\n    workouts.find(w => {\n      if (w.date === day) {\n        workout.steps = w.steps;\n      }\n    });\n    return workout;\n  });\n};\n\nexport default createStore({\n  state: {\n    users: [],\n    headerTitle: 'Rankings',\n    isLoading: false,\n  },\n  mutations: {\n    setUsers: (state, users) => {\n      state.users = users;\n    },\n    setHeaderTitle: (state, title) => {\n      state.headerTitle = title;\n    },\n  },\n  actions: {\n    async fetchUsers({ commit }) {\n      const dailyResponse = await apiProvider.getDailyRanking();\n      const weeklyResponse = await apiProvider.getWeeklyRanking();\n      const monthlyResponse = await apiProvider.getMonthlyRanking();\n\n      const dailyResults = dailyResponse.data.results;\n      const weeklyResults = weeklyResponse.data.results;\n      const monthlyResults = monthlyResponse.data.results;\n\n      const users = dailyResults.map((user, index) => {\n        return {\n          ...user,\n          daily_avg: user.avg_steps,\n          weekly_avg: weeklyResults[index].avg_steps,\n          monthly_avg: monthlyResults[index].avg_steps,\n        };\n      });\n\n      commit('setUsers', users);\n    },\n\n    async fetchUser({ commit, state }, userId) {\n      const users = [...state.users];\n      const user = users.find(u => {\n        return u.id === userId;\n      });\n      if (user.workouts !== undefined) return;\n\n      const response = await apiProvider.getUserWorkouts(user.username);\n      const workouts = response.data.results;\n\n      const weekDates = UtilDate.weekDates();\n      const monthDates = UtilDate.monthDates();\n\n      const weekWorkouts = workoutsDate(weekDates, workouts);\n      const monthWorkouts = workoutsDate(monthDates, workouts);\n\n      const usersUpdated = this.state.users.map(u => {\n        if (u.id === userId) {\n          u.workouts = workouts;\n          u.week_workouts = weekWorkouts;\n          u.month_workouts = monthWorkouts;\n        }\n        return u;\n      });\n\n      commit('setUsers', usersUpdated);\n    },\n\n    async setTitle({ commit }, title) {\n      commit('setHeaderTitle', title);\n    },\n  },\n  getters: {\n    getHeaderTitle: state => state.headerTitle,\n    getAllUsers: state => state.users,\n    getUser: state => id => {\n      return state.users.find(u => u.id === id);\n    },\n  },\n});\n"
        }
    ]
}